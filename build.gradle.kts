/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Kotlin application project to get you started.
 */

import org.jetbrains.kotlin.gradle.tasks.KotlinCompile
import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar

// jvm target
val JVM = 21 // 1.8 for 8, 11 for 11

// output jar name root
val OUTPUT_JAR_NAME = "fast-block-edit-lib"

// target will be set to minecraft version by cli input parameter
var target = "1.21" // defaults to latest

plugins {
    // Apply the Kotlin JVM plugin to add support for Kotlin.
    id("org.jetbrains.kotlin.jvm") version "2.0.20"
    id("com.github.johnrengelman.shadow") version "7.0.0"
    // paperweight for nms
    id("io.papermc.paperweight.userdev") version "1.7.4"

    `maven-publish`
    // Apply the application plugin to add support for building a CLI application.
    application
}

repositories {
    gradlePluginPortal()

    // paper
    maven("https://repo.papermc.io/repository/maven-public/")
}

java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(JVM))
    }
}

configurations {
    create("resolvableImplementation") {
        isCanBeResolved = true
        isCanBeConsumed = true
    }
}

dependencies {
    // Align versions of all Kotlin components
    implementation(platform("org.jetbrains.kotlin:kotlin-bom"))

    // Use the Kotlin JDK 8 standard library.
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8")

    // Use the Kotlin test library.
    testImplementation("org.jetbrains.kotlin:kotlin-test")

    // Use the Kotlin JUnit integration.
    testImplementation("org.jetbrains.kotlin:kotlin-test-junit")

    // paper and spigot api depending on parameter version


    when ( target ) {
        "1.12" -> paperweight.paperDevBundle("1.12.2-R0.1-SNAPSHOT")
        "1.16" -> paperweight.paperDevBundle("1.16.5-R0.1-SNAPSHOT")
        "1.18" -> paperweight.paperDevBundle("1.18.2-R0.1-SNAPSHOT")
        "1.19" -> paperweight.paperDevBundle("1.19.2-R0.1-SNAPSHOT")
        "1.20" -> paperweight.paperDevBundle("1.20.2-R0.1-SNAPSHOT")
        "1.21" -> paperweight.paperDevBundle("1.21.1-R0.1-SNAPSHOT")
        else -> paperweight.paperDevBundle("1.21.1-R0.1-SNAPSHOT") // fallback to latest
    }
}

publishing {
    repositories {
        maven {
            name = "Repsy"
            url = uri("https://repo.repsy.io/mvn/tlm920/minecraft")
            credentials {
                // use local props instead
                username = project.findProperty("repsy.user") as String?
                password = project.findProperty("repsy.key") as String?
            }
        }
    }

    publications.create<MavenPublication>("maven") {
        from(components["java"])
        groupId = "phonon.blockedit"
        artifactId = "fast-block-edit"
        version = "$target-SNAPSHOT"
    }
}

application {
    // Define the main class for the application.
    mainClass.set("phonon.blockedit.FastBlockEditSessionKt")
}


tasks {
    named<ShadowJar>("shadowJar") {
        // verify valid target minecraft version
        doFirst {
            val supportedMinecraftVersions = setOf("1.12", "1.16", "1.18", "1.19", "1.20", "1.21")
            if ( !supportedMinecraftVersions.contains(target) ) {
                throw Exception("Invalid Minecraft version! Supported versions are: " + supportedMinecraftVersions.joinToString(", "))
            }
        }

        configurations = mutableListOf(project.configurations.named("resolvableImplementation").get())
        // minimize() // FOR PRODUCTION USE MINIMIZE?
        archiveFileName.set("${OUTPUT_JAR_NAME}-${target}.jar")
    }
}

tasks {
    build {
        dependsOn(shadowJar)
    }

    test {
        testLogging.showStandardStreams = true
    }
}